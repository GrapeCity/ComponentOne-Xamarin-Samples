//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace C1Weather.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("C1Weather.Resources.AppResources", typeof(AppResources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to About
        /// </summary>
        internal static string About
        {
            get
            {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to C1Weather was made by GrapeCity using ComponentOne Xamarin Edition.  C1 Xamarin Edition is a collection of native, cross-platform mobile controls for developing apps on iOS, Android, and UWP..
        /// </summary>
        internal static string AboutLabelText {
            get {
                return ResourceManager.GetString("AboutLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to reterive weather data at this time..
        /// </summary>
        internal static string AlertMessage {
            get {
                return ResourceManager.GetString("AlertMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string AlertTitle {
            get {
                return ResourceManager.GetString("AlertTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date.
        /// </summary>
        internal static string DateHeader {
            get {
                return ResourceManager.GetString("DateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        internal static string DescriptionHeader {
            get {
                return ResourceManager.GetString("DescriptionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a ZIP Code.
        /// </summary>
        internal static string EntryPlaceholder {
            get {
                return ResourceManager.GetString("EntryPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High.
        /// </summary>
        internal static string HighHeader {
            get {
                return ResourceManager.GetString("HighHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Humidity.
        /// </summary>
        internal static string HumidityAxisLabel {
            get {
                return ResourceManager.GetString("HumidityAxisLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Humidity.
        /// </summary>
        internal static string HumidityHeader {
            get {
                return ResourceManager.GetString("HumidityHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon.
        /// </summary>
        internal static string IconHeader {
            get {
                return ResourceManager.GetString("IconHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low.
        /// </summary>
        internal static string LowHeader {
            get {
                return ResourceManager.GetString("LowHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pressure.
        /// </summary>
        internal static string PressureHeader {
            get {
                return ResourceManager.GetString("PressureHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temperature.
        /// </summary>
        internal static string TempAxisLabel {
            get {
                return ResourceManager.GetString("TempAxisLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This app uses the OpenWeatherMap API to provide weather data, and is licensed under CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/).  More information is available at www.openweathermap.org..
        /// </summary>
        internal static string WeatherLabelTest {
            get {
                return ResourceManager.GetString("WeatherLabelTest", resourceCulture);
            }
        }
    }
}
